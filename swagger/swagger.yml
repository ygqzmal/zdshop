swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /cart/:
    get:
      tags:
      - cart
      description: Get cart
      operationId: CartController.Get
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/controllers.Cart'
        "400":
          description: 显示失败
    post:
      tags:
      - cart
      description: add cart
      operationId: CartController.Post
      parameters:
      - in: formData
        name: pid
        description: 参数id
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: count
        description: 添加数量
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 购物车添加成功'
        "400":
          description: 购物车添加失败
  /cart/{gid}:
    get:
      tags:
      - cart
      description: Get parameter
      operationId: CartController.Get
      parameters:
      - in: path
        name: gid
        description: gid for goods id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.GoodsParameter'
        "400":
          description: lost data
  /cart/{oldId}/{newId}/{count}:
    put:
      tags:
      - cart
      description: Put cart
      operationId: CartController.Put
      parameters:
      - in: path
        name: pid
        description: pid for parameter id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "400":
          description: update失败
  /cart/{pid}:
    delete:
      tags:
      - cart
      description: Get parameter
      operationId: CartController.Get
      parameters:
      - in: path
        name: pid
        description: pid for goodsParameter id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 删除成功'
        "400":
          description: lost data
  /cart/{pid}/{count}:
    put:
      tags:
      - cart
      description: Put cart
      operationId: CartController.Put
      parameters:
      - in: path
        name: pid
        description: pid for parameter id
        schema:
          $ref: '#/definitions/.true'
      - in: path
        name: count
        description: count for parameter
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "400":
          description: update失败
  /category/:
    get:
      tags:
      - category
      description: 获取一级分类
      operationId: CategoryController.Get First
      responses:
        "200":
          description: '{string} 成功'
        "400":
          description: 失败
    put:
      tags:
      - category
      description: 修改某个分类名字
      operationId: CategoryController.Put Category
      parameters:
      - in: formDate
        name: cid
        description: 分类id
        schema:
          $ref: '#/definitions/.true'
      - in: formDate
        name: name
        description: 分类名称
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 成功'
        "400":
          description: 失败
    post:
      tags:
      - category
      description: add category
      operationId: CategoryController.Post
      parameters:
      - in: formData
        name: categoryName
        description: 分类名称
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: categoryId
        description: 分类ID
        schema:
          $ref: '#/definitions/.false'
      - in: formData
        name: image
        description: 分类图片
        schema:
          $ref: '#/definitions/.false'
      responses:
        "200":
          description: '{string} 分类添加成功'
        "400":
          description: 分类添加失败
  /category/{cid}:
    delete:
      tags:
      - category
      description: 删除某个分类
      operationId: CategoryController.Delete Category
      parameters:
      - in: path
        name: cid
        description: 分类id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 成功'
        "400":
          description: 失败
  /category/{id}:
    get:
      tags:
      - category
      description: 根据一级分类id获取二级级分类
      operationId: CategoryController.Get Second
      parameters:
      - in: path
        name: name
        description: 分类id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 成功'
        "400":
          description: 失败
  /goods/:
    post:
      tags:
      - goods
      description: AddGoods and AddGoodsParameter and AddGoodsBanner
      operationId: GoodsController.Post
      parameters:
      - in: formData
        name: name
        description: 商品名称
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: brief
        description: 商品简介
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: state
        description: 商品状态 1-上架 2-下架
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: explain
        description: 商品说明
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: categoryId
        description: 商品分类id
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: parameters
        description: 商品参数
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: img
        description: 商品默认图片
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: imgs
        description: 商品轮播图片
        schema:
          $ref: '#/definitions/.false'
      responses:
        "200":
          description: '{string} 商品添加成功'
        "400":
          description: 商品添加失败
  /goods/{cid}/{pageIndex}:
    get:
      tags:
      - goods
      description: Get Goods
      operationId: GoodsController.Get All
      parameters:
      - in: path
        name: cid
        description: category id
        schema:
          $ref: '#/definitions/.true'
      - in: path
        name: pageIndex
        description: pageIndex
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/controllers.Goods'
        "403":
          description: lost data
  /goods/{gid}:
    get:
      tags:
      - goods
      description: Get Good
      operationId: GoodsController.Get One
      parameters:
      - in: path
        name: gid
        description: good ID
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
    delete:
      tags:
      - goods
      description: delete the good
      operationId: GoodsController.Delete
      parameters:
      - in: path
        name: gid
        description: body for user content
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
  /goods/img:
    put:
      tags:
      - goods
      description: update goods BannerImage
      operationId: GoodsController.Put BannerImage
      parameters:
      - in: formData
        name: bid
        description: body for user content
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: img
        description: default image
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
    post:
      tags:
      - goods
      description: post goods BannerImage
      operationId: GoodsController.Post BannerImage
      parameters:
      - in: formData
        name: gid
        description: id for goods id
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: img
        description: body for user content
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
  /goods/img/{bid}:
    delete:
      tags:
      - goods
      description: update default goods image
      operationId: GoodsController.Delete BannerImage
      parameters:
      - in: path
        name: bid
        description: body for user content
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
  /goods/para/{pid}:
    delete:
      tags:
      - goods
      description: Delete One Parameter
      operationId: GoodsController.Delete Parameter
      parameters:
      - in: path
        name: pid
        description: id for parameter id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 参数删除成功'
        "403":
          description: lost data
  /goods/putAttribute:
    put:
      tags:
      - goods
      description: UpdateGoodsAttribute
      operationId: GoodsController.Update Goods Attribute
      parameters:
      - in: formDate
        name: gid
        description: id for goods goodsId
        schema:
          $ref: '#/definitions/.true'
      - in: formDate
        name: cid
        description: cid for goods categoryId
        schema:
          $ref: '#/definitions/.true'
      - in: formDate
        name: name
        description: name for goods goodsName
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 修改商品成功'
        "403":
          description: lost data
  /goods/putBanner:
    put:
      tags:
      - goods
      description: UpdateGoodsBanner
      operationId: GoodsController.Update Goods Banner
      parameters:
      - in: path
        name: gid
        description: id for goods
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 修改商品成功'
        "403":
          description: lost data
  /goods/putParameter:
    put:
      tags:
      - goods
      description: UpdateGoodsParameters
      operationId: GoodsController.Update Goods Parameters
      parameters:
      - in: path
        name: gid
        description: id for goods
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 修改商品成功'
        "403":
          description: lost data
  /goods/putState:
    put:
      tags:
      - goods
      description: UpdateGoodsState
      operationId: GoodsController.Update Goods State
      parameters:
      - in: formDate
        name: gid
        description: id for goods id
        schema:
          $ref: '#/definitions/.true'
      - in: formDate
        name: state
        description: 商品上下架
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 修改商品成功'
        "403":
          description: lost data
  /goods/search:
    post:
      tags:
      - goods
      description: 搜索某个商品
      operationId: GoodsController.search
      parameters:
      - in: formData
        name: goodsName
        description: good name
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: img
        description: body for user content
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
  /goods/tex:
    post:
      tags:
      - goods
      description: Tex
      operationId: GoodsController.Tex
      parameters:
      - in: path
        name: gid
        description: body for user content
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: lost data
  /order/:
    get:
      tags:
      - order
      description: add cart
      operationId: OrderController.Get
      parameters:
      - in: path
        name: uid
        description: 用户id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单添加成功'
        "400":
          description: 订单添加失败
    put:
      tags:
      - order
      description: add cart
      operationId: OrderController.Put
      parameters:
      - in: formData
        name: orderId
        description: orderId
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: addressId
        description: addressId
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单添加成功'
        "400":
          description: 订单添加失败
    post:
      tags:
      - order
      description: add cart
      operationId: OrderController.Post
      parameters:
      - in: formData
        name: pid
        description: 参数id
        schema:
          $ref: '#/definitions/.true'
      - in: formData
        name: count
        description: 添加数量
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单添加成功'
        "400":
          description: 订单添加失败
  /order/{oid}:
    get:
      tags:
      - order
      description: add cart
      operationId: OrderController.Get
      parameters:
      - in: path
        name: oid
        description: orderId
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单查询成功'
        "400":
          description: 订单查询失败
    delete:
      tags:
      - order
      description: add cart
      operationId: OrderController.Put
      parameters:
      - in: path
        name: oid
        description: orderId
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单添加成功'
        "400":
          description: 订单添加失败
  /order/{uid}:
    get:
      tags:
      - order
      description: add cart
      operationId: OrderController.Put
      parameters:
      - in: path
        name: oid
        description: orderId
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单添加成功'
        "400":
          description: 订单添加失败
  /order/{uid}/{state}:
    get:
      tags:
      - order
      description: add cart
      operationId: OrderController.Get
      parameters:
      - in: path
        name: state
        description: 订单状态
        schema:
          $ref: '#/definitions/.true'
      - in: path
        name: uid
        description: 用户id
        schema:
          $ref: '#/definitions/.true'
      responses:
        "200":
          description: '{string} 订单添加成功'
        "400":
          description: 订单添加失败
definitions:
  .false:
    type: object
  .true:
    type: object
  controllers.Cart:
    title: Cart
    type: object
    properties:
      count:
        type: integer
        format: int64
      goodsParameter:
        $ref: '#/definitions/models.GoodsParameter'
  controllers.Goods:
    title: Goods
    type: object
    properties:
      code:
        type: integer
        format: int64
      goods:
        type: array
        items:
          $ref: '#/definitions/models.Goods'
      page_count:
        type: integer
        format: int64
      page_index:
        type: integer
        format: int64
  models.Address:
    title: Address
    type: object
    properties:
      Content:
        type: string
      Distribution:
        $ref: '#/definitions/models.Distribution'
      Id:
        type: integer
        format: int64
      IsDefault:
        type: integer
        format: int64
      Name:
        type: string
      OrderInfo:
        type: array
        items:
          $ref: '#/definitions/models.OrderInfo'
      Tele:
        type: string
  models.Admin:
    title: Admin
    type: object
    properties:
      AccordAuthority:
        type: integer
        format: int64
      CapitalAuthority:
        type: integer
        format: int64
      DistributorAuthority:
        type: integer
        format: int64
      GoodsAuthority:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      JobPosition:
        type: string
      MessageAuthority:
        type: integer
        format: int64
      Operation:
        type: array
        items:
          $ref: '#/definitions/models.Operation'
      OrderAuthority:
        type: integer
        format: int64
      Role:
        type: string
      User:
        $ref: '#/definitions/models.User'
  models.BigDistribution:
    title: BigDistribution
    type: object
    properties:
      AdGrade:
        type: string
      AdTer:
        $ref: '#/definitions/models.Territory'
      AsLocal:
        $ref: '#/definitions/models.HoldLocal'
      Id:
        type: integer
        format: int64
      Money:
        type: number
        format: double
      User:
        $ref: '#/definitions/models.User'
      UserMoney:
        type: number
        format: double
  models.Distribution:
    title: Distribution
    type: object
    properties:
      AdTer:
        $ref: '#/definitions/models.Territory'
      Address:
        type: array
        items:
          $ref: '#/definitions/models.Address'
      AsLocal:
        $ref: '#/definitions/models.HoldLocal'
      Id:
        type: integer
        format: int64
      Money:
        type: number
        format: double
      OrderInfo:
        type: array
        items:
          $ref: '#/definitions/models.OrderInfo'
      ShopCart:
        type: array
        items:
          $ref: '#/definitions/models.ShopCart'
      Type:
        type: integer
        format: int64
      User:
        $ref: '#/definitions/models.User'
  models.Goods:
    title: Goods
    type: object
    properties:
      Category:
        $ref: '#/definitions/models.GoodsCategory'
      CreateTime:
        type: string
        format: datetime
      Explain:
        type: string
      GoodsBanner:
        type: array
        items:
          $ref: '#/definitions/models.GoodsBanner'
      GoodsBrief:
        type: string
      GoodsParameter:
        type: array
        items:
          $ref: '#/definitions/models.GoodsParameter'
      GoodsState:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Name:
        type: string
      SalesValue:
        type: integer
        format: int64
      ShopCart:
        type: array
        items:
          $ref: '#/definitions/models.ShopCart'
      UpdateTime:
        type: string
        format: datetime
  models.GoodsBanner:
    title: GoodsBanner
    type: object
    properties:
      Goods:
        $ref: '#/definitions/models.Goods'
      GoodsUrl:
        type: string
      Id:
        type: integer
        format: int64
      IsDefault:
        type: integer
        format: int64
  models.GoodsCategory:
    title: GoodsCategory
    type: object
    properties:
      CreateTime:
        type: string
        format: datetime
      Goods:
        type: array
        items:
          $ref: '#/definitions/models.Goods'
      Id:
        type: integer
        format: int64
      Image:
        type: string
      Name:
        type: string
      ParentId:
        type: integer
        format: int64
      UpdateTime:
        type: string
        format: datetime
  models.GoodsParameter:
    title: GoodsParameter
    type: object
    properties:
      Goods:
        $ref: '#/definitions/models.Goods'
      GoodsNowPrice:
        type: number
        format: double
      GoodsNumber:
        type: integer
        format: int64
      GoodsTruePrice:
        type: number
        format: double
      Id:
        type: integer
        format: int64
      IsDefault:
        type: integer
        format: int64
      OrderGoods:
        type: array
        items:
          $ref: '#/definitions/models.OrderGoods'
      Parameter:
        type: string
      Parameter2:
        type: string
      SalesValue:
        type: integer
        format: int64
  models.HoldLocal:
    title: HoldLocal
    type: object
    properties:
      BigDistribution:
        type: array
        items:
          $ref: '#/definitions/models.BigDistribution'
      Country:
        type: string
      Distribution:
        type: array
        items:
          $ref: '#/definitions/models.Distribution'
      Id:
        type: integer
        format: int64
      Prefecture:
        type: string
      Province:
        type: string
      Town:
        type: string
  models.Information:
    title: Information
    type: object
    properties:
      Content:
        type: string
      Id:
        type: integer
        format: int64
      Kind:
        type: string
      State:
        type: string
      Time:
        type: string
        format: datetime
      User1:
        $ref: '#/definitions/models.User'
      User2:
        $ref: '#/definitions/models.User'
  models.Logistics:
    title: Logistics
    type: object
    properties:
      AMoney:
        type: number
        format: double
      Description:
        type: string
      Id:
        type: integer
        format: int64
      InFlow:
        type: string
      Time:
        type: string
        format: datetime
      User:
        $ref: '#/definitions/models.User'
  models.Object:
    title: Object
    type: object
    properties:
      ObjectId:
        type: string
      PlayerName:
        type: string
      Score:
        type: integer
        format: int64
  models.Operation:
    title: Operation
    type: object
    properties:
      Admin:
        $ref: '#/definitions/models.Admin'
      Content:
        type: string
      Id:
        type: integer
        format: int64
      Time:
        type: string
        format: datetime
  models.OrderGoods:
    title: OrderGoods
    type: object
    properties:
      Count:
        type: integer
        format: int64
      GoodsParameter:
        $ref: '#/definitions/models.GoodsParameter'
      Id:
        type: integer
        format: int64
      OrderInfo:
        $ref: '#/definitions/models.OrderInfo'
      Price:
        type: number
        format: double
  models.OrderInfo:
    title: OrderInfo
    type: object
    properties:
      Address:
        $ref: '#/definitions/models.Address'
      CreateTime:
        type: string
        format: datetime
      Distribution:
        $ref: '#/definitions/models.Distribution'
      Id:
        type: integer
        format: int64
      OrderGoods:
        type: array
        items:
          $ref: '#/definitions/models.OrderGoods'
      OrderId:
        type: string
      OrderStatus:
        type: integer
        format: int64
      TotalCount:
        type: integer
        format: int64
      TotalPrice:
        type: number
        format: double
  models.ShopCart:
    title: ShopCart
    type: object
    properties:
      Distribution:
        $ref: '#/definitions/models.Distribution'
      Good:
        $ref: '#/definitions/models.Goods'
      Id:
        type: integer
        format: int64
      Number:
        type: integer
        format: int64
      Time:
        type: string
        format: datetime
  models.Territory:
    title: Territory
    type: object
    properties:
      BigDistribution:
        type: array
        items:
          $ref: '#/definitions/models.BigDistribution'
      Distribution:
        type: array
        items:
          $ref: '#/definitions/models.Distribution'
      Id:
        type: integer
        format: int64
      Introduce:
        type: string
      Name:
        type: string
  models.User:
    title: User
    type: object
    properties:
      Admin:
        type: array
        items:
          $ref: '#/definitions/models.Admin'
      BigDistribution:
        type: array
        items:
          $ref: '#/definitions/models.BigDistribution'
      Distribution:
        type: array
        items:
          $ref: '#/definitions/models.Distribution'
      Id:
        type: integer
        format: int64
      Information:
        type: array
        items:
          $ref: '#/definitions/models.Information'
      LastLoginIp:
        type: string
      LastLoginTime:
        type: string
        format: datetime
      LoginNum:
        type: integer
        format: int64
      Logistics:
        $ref: '#/definitions/models.Logistics'
      Name:
        type: string
      Password:
        type: string
      RegisterTime:
        type: string
        format: datetime
      State:
        type: string
      Tele:
        type: string
tags:
- name: goods
  description: |
    operations for Goods
- name: category
  description: |
    operations for Category
